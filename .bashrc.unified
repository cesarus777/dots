#
# ~/.bashrc.unified
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1="\[\033[01;36m\][${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;36m\]]\[\033[01;34m\]\$\[\033[00m\]> "
else
    PS1="${debian_chroot:+($debian_chroot)}\u@\h:\w\$> "
fi
unset color_prompt force_color_prompt prompt_with_unicode

# Alias definitions.
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

FORCED_EDITOR=vim

if [ -n "${FORCED_EDITOR}" ]; then
  export SUDO_EDITOR="${FORCED_EDITOR}"
  export EDITOR="${FORCED_EDITOR}"
elif command -v nvim &>/dev/null; then
  export SUDO_EDITOR=nvim
  export EDITOR=nvim
elif command -v vim &>/dev/null; then
  export SUDO_EDITOR=vim
  export EDITOR=vim
fi
